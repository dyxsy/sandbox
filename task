  {auth_server, {"115.239.230.68", 8880} }

  rocket_finance
  在 screen -x 11115.import 中开启或停止服务,和备份数据库
  比赛成绩处理流程
  god start thin-rocket_finance
  god stop thin-rocket_finance
  ----------------------------------------------------------------------------------------------------------------------------
  计算不活跃用户
  rocket_finance_manager:count_inactive_days().
  计算单笔   (缺用户操作日志)

  %TradingDay = "2014-00-00".

  %rocket_finance_manager:analyze_investments(TradingDay).

  搬行情

  计算权益日K线 (缺用户操作日志)*
    TradingDay = "2013-12-13".
    equity_candlestick_manager:calculate(TradingDay).

  数据备份*
  god start thin-rocket_finance
  god stop thin-rocket_finance
  mysqldump -uroot list_lktz --ignore-table=list_lktz.equity_min_candlesticks  > ~/rf_data/rf.20111205_20140108_all.20140108_nokline.dump
  ----------------------------------------------------------------------------------------------------------------------------


  ------------------------------------------------------------------------------------
  计算单个用户的成绩
select * from contest_ranks where investor_id = 20275 and contest_id = 2 and phase_id = 64043 and init_capital = 500000 and max_init_capital = 500000 and started_at = "2013-02-07 00:00:00";
  insert into phases set investor_id = 908, contest_id = 2, started_at = "2014-08-07 00:00:00",result = 1, init_capital = 500000;

  insert into participations set investor_id = 908, contest_id = 2,phase_id = 145040;

  insert into contest_ranks set investor_id = 908, contest_id = 2, phase_id = 145040, init_capital = 500000, max_init_capital = 500000, started_at = "2014-08-07 00:00:00";

  update investors set phase_id = 120373, contest_status = 1, next_launch_date = "2014-08-07 00:00:00" where out_id = 100891;

  Investor = rocket_finance_database:find_investor(pool, [{out_id, 136318}]).
  rank_calculate_worker:async_calculate(Investor,"2015-08-19",undefined).
  ------------------------------------------------------------------------------------

  ./rebar generate skeleton=otp.start-dev to=./ebin/

  erl_cheetah_admin:login("ninja", "ninja@admin", [investors, varieties]).
  erl_cheetah_admin:login("rocketfinance", "rocketfinance@lk", [monitor_groups]).
  erl_cheetah_admin:login().z

  find_pre_trades(ConnPool, InvestorId, InstrumentId, TradingDay) ->
      SQL = list_to_binary(["select * from trades where investor_id = ? and instrument_id = ? and trading_day < ? and investment_id is null and trading_day > ? order by trade_time_ts asc"]),
      Result = emysql:execute(ConnPool, SQL, [InvestorId, InstrumentId, TradingDay, "2012-11-22"]),
      emysql_util:as_record(Result, trade, record_info(fields, trade)).

  ------------------------------------------------------------------------------------------------------------
  配置测试行情
  restart 9275.vmarket 项目

  market_collector:clear_rt_market().

  market_collector:toggle_debug_rt_market().

  vmatch_signal_broadcaster ! {<<"if">>, trading}.


  ==================比赛审核======================
  update investors set contest_id = 2, contest_status = 2, comment = "于2015年04月03日参加复赛",next_launch_date = "2015-04-03 00:00:00", launch_init_cap = 500000 where out_id in(121343);

  select id from investors where out_id in(121343);
  注:LK118381 没有执行一下步骤,原因reviews中没有他的记录
  select id from reviews where investor_id = (select id from investors where out_id in(121343));
  update reviews set next_launch_date = "2015-03-20 00:00:00",reviewed_at = now(),status=1,comment = "于2015年03月20日参加复赛" where id in(4287);


update investors set comment = "于2015年04月03日参加复赛", next_launch_date = "2015-04-03 00:00:00"
  ===============恢复数据=================
  pv ~/rf_data/rf.20131211_20140603_all.20130603_nokline.dump | mysql -u root rocket_finance

  ========================================
 insert into reviews(investor_id,phase_id,comment,reviewed_at,status,created_at,updated_at,next_launch_date) values(5003,)

  审核
LK101345通过审核，于2014-09-26参加复赛，
LK105093通过审核，于2014-09-26参加复赛，
LK110773通过审核，于2014-09-26参加复赛，
LK111576通过审核，于2014-09-26参加复赛，
LK111579通过审核，于2014-09-26参加复赛，
LK112588通过审核，于2014-09-26参加复赛，
LK123461通过审核，于2014-09-26参加复赛，
LK125437通过审核，于2014-09-26参加复赛，
LK128962通过审核，于2014-09-26参加复赛，
LK134325通过审核，于2014-09-26参加复赛，
LK140667通过审核，于2014-09-26参加复赛，

  初赛
长时间不交易

  晋级
LK100677
LK100985
LK101105
LK101971
LK103564
LK105137
LK105750
LK107580
LK107663
LK116987
LK118470
LK122795
LK133219
LK135056
LK136149
15
  淘汰

  总淘汰共476 一共4883
  复赛
长时间不交易

  淘汰
LK101009
LK101716
LK101963
LK102684
LK106231
LK109774
LK117960
LK120495
LK120756
LK123300
LK127492
LK140602


  晋级
LK102035

  总淘汰 共 152
  select * from contest_ranks where  investor_id = 2674;

  少人

  c = ContestRank.select("investor_id").where(:trading_day => "2014-02-28 00:00:00",:contest_id => 1)
  investor_ids = c.collect{|x| x.investor_id.to_i}

  aa = Investor.select('out_id').where(:id => investor_ids)


  outIds_ids = aa.collect{|x| x.out_id.to_i}


  LK130695通过审核，于2013-12-23参加复赛 id = 11208

  update investors set contest_id = 2,
  contest_status = 1,
  launch_init_cap = 500000,
  next_launch_date = "2015-08-10 00:00:00" where out_id in (100532,138024);

  select * from daily_cumulative_values where investor_id = 7414 order by id desc limit 3\G;
