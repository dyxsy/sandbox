{auth_server, {"115.239.230.68", 8880} }

rocket_finance
在 screen -x 11115.import 中开启或停止服务,和备份数据库
比赛成绩处理流程

----------------------------------------------------------------------------------------------------------------------------
计算全部人成绩
进入screen进行操作，有日志可以查看
screen -x rocket_finance

lkadmin@lknode92x:~/cheetah/rocket_finance$ ./ebin/start-dev.sh

同步数据
同步合约，用户，成交记录和登录日志 (缺用户操作日志)

交易日使用: 

	TradingDay = "2013-09-10".
  Reqs = [varieties, instruments, investors, settlements]. 
  rf_cheetah_sync:run(TradingDay, Reqs).

  q().退出  重启一下 服务

  同步实时行情, 分钟K线
  TradingDay = "2013-09-10".
  Reqs2 = [varieties, instruments, candlesticks].
  %Reqs2 = [varieties, instruments, rt_markets, candlesticks].
  rf_cheetah_sync:run(TradingDay, Reqs2).
  如果遇到timeout 要进入数据库 market 删除表candlesticks和表market_ticks 中 今天的数据

非交易日使用: 
  	TradingDay = "2013-09-08". 
    rf_cheetah_sync:run(TradingDay, not_trading_day).  

审核晋级用户
bundle exec thin start -p 4567 开启一个本地端口
root登陆 密码:root@lktz
 
导入新参赛选手名单 // 一个月一次 月初

要先审核名单晋级才能初始化

比赛成绩计算初始化 (缺用户操作日志)
TradingDay = "2013-09-10".
contest_initor:do_init(TradingDay).

计算初赛，复赛成绩 (缺用户操作日志)
rocket_finance_manager:calc_ranks(1, TradingDay).    % 计算模拟初赛成绩 > 7minutes
rocket_finance_manager:calc_ranks(2, TradingDay).    % 计算模拟复赛成绩 < 1minutes

统计初赛、复赛 比赛统计数据 (缺用户操作日志)
rocket_finance_manager:stat_contest(1, TradingDay).   % 执行2次
rocket_finance_manager:stat_contest(2, TradingDay).   % 执行1次

计算不活跃用户
rocket_finance_manager:count_inactive_days().

计算单笔 (缺用户操作日志)

TradingDay = "2013-08-13".

rocket_finance_manager:analyze_investments(TradingDay).

搬行情

计算权益日K线 (缺用户操作日志)*

TradingDay = "2013-09-10".
equity_candlestick_manager:calculate(TradingDay).

导入实盘成绩
bundle exec thin start -p 4567 开启一个本地端口

iconv -f gbk -t utf8 real.csv > shipan_2013-09-10.utf8.csv
iconv -f gbk -t utf8 2013-09-10.csv > 2013-09-10.utf8.csv


淘汰长期不交易名单
~/rocket_finance/lib/finance$ vim importer.rb 最后一个方法out_ids = [] 放入长期不交易的名单
rails runner lib/finance/importer.rb
数据备份*
mysqldump -uroot rocket_finance --ignore-table=rocket_finance.equity_min_candlesticks  > ~/rf_data/rf.20111205_20130822_all.20130822_nokline.dump
----------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------
LK116870 8月21号开始复赛。 id = 16648
计算单个用户的成绩 
insert into phases set investor_id = 16648, contest_id = 2, started_at = "2013-08-21 00:00:00",result = 1, init_capital = 500000;
insert into participations set investor_id = 16648, contest_id = 2,phase_id = 95282;
insert into contest_ranks set investor_id = 16648, contest_id = 2, phase_id = 95282, init_capital = 500000, max_init_capital = 500000, started_at = "2013-08-21 00:00:00";
update investors set phase_id = 95282, contest_status = 1, next_launch_date = "2013-08-21 00:00:00" where id = 16648;

TradingDay = "2013-08-21".
OutId = 116870.
rocket_finance_manager:calc_investor_rank({out_id, OutId}, TradingDay).
------------------------------------------------------------------------------------

./rebar generate skeleton=otp.start-dev to=./ebin/  

erl_cheetah_admin:login("ninja", "ninja@admin", [investors, varieties]).
erl_cheetah_admin:login("rocketfinance", "rocketfinance@lk", [monitor_groups]).
erl_cheetah_admin:login().

find_pre_trades(ConnPool, InvestorId, InstrumentId, TradingDay) ->
    SQL = list_to_binary(["select * from trades where investor_id = ? and instrument_id = ? and trading_day < ? and investment_id is null and trading_day > ? order by trade_time_ts asc"]),
    Result = emysql:execute(ConnPool, SQL, [InvestorId, InstrumentId, TradingDay, "2012-11-22"]),
    emysql_util:as_record(Result, trade, record_info(fields, trade)).

------------------------------------------------------------------------------------------------------------
配置测试行情
restart 9275.vmarket 项目

market_collector:clear_rt_market().

market_collector:toggle_debug_rt_market().

vmatch_signal_broadcaster ! {<<"if">>, trading}.


==================比赛审核======================
update investors set contest_id = 2, contest_status = 2, comment = "于2013-08-15参加复赛",next_launch_date = "2013-08-15 00:00:00", launch_init_cap = 500000 where out_id in(103382,103738,108992,118381,121656);

select id from investors where out_id in(103382,103738,108992,118381,121656);
注:LK118381 没有执行一下步骤,原因reviews中没有他的记录
select id from reviews where investor_id = 3377;
update reviews set next_launch_date = "2013-08-15 00:00:00",reviewed_at = now(),status=1,comment = "于2013-08-15参加复赛" where id in(1608, 1609,1610,1611,1612);

===============恢复数据=================
pv ~/rf_data/rf.20111205_20130603_all.20130603_nokline.dump | mysql -u root rocket_finance

========================================










审核

LK100199通过审核，于2013-09-11参加复赛
LK105731通过审核，于2013-09-11参加复赛
LK108228通过审核，于2013-09-11参加复赛
LK129375通过审核，于2013-09-11参加复赛


实盘
LK119226,苏女士,上海,565876.24,0.00,0.1317525
LK100891,殷先生,湖南,540933.64,16113.69,0.0818673
LK102120,陈先生,浙江,539127.55,-5243.98,0.0782551
LK102374,欧先生,广东,531415.43,-53371.28,0.0628309
LK106870,宗先生,北京,527679.97,-10583.09,0.0553599
LK113354,丰先生,辽宁,518377.84,10812.14,0.0367557
LK106115,林先生,福建,515452.34,9697.89,0.0309047
LK100566,李先生,广东,508151.16,0.00,0.0163023
LK101186,于先生,山东,504514.35,0.00,0.0090287
LK100068,姜先生,北京,502440.31,-30561.47,0.0048806
LK127796,黄先生,广东,496150.76,0.00,-0.0076985
LK106825,徐先生,山东,496110.85,-25961.04,-0.0077783
LK119240,谢先生,天津,495352.48,5885.26,-0.0092950
LK123464,朱先生,甘肃,492345.41,-2314.75,-0.0153092
LK104021,李先生,河南,486569.99,0.00,-0.0268600
LK102962,孙先生,湖南,481540.53,42652.39,-0.0369189
LK101378,李先生,天津,478961.22,4475.37,-0.0420776
LK111340,夏先生,江西,474151.89,-1821.41,-0.0516962
LK101000,王先生,河南,467100.07,14064.09,-0.0657999
LK111230,冯先生,辽宁,459843.22,13032.27,-0.0803136
LK119573,李女士,广东,455003.56,0.00,-0.0899929
LK120649,颜先生,重庆,454591.64,21012.46,-0.0908167
初赛
长时间不交易
LK103549
LK106916
LK109127
LK110617
LK116363
LK117848
LK121734
LK129346
LK131565
LK131809
LK132755
LK133110
LK133424
LK133427
LK133808


23

晋级
LK100199
LK105731
LK108228
LK129375


4

淘汰
100053,100058,100080,100117,100126,100219,100245,100256,100275,100331,100342,100381,100390,100452,100483,100531,100607,100622,100643,100677,100872,100893,100913,100990,101006,101009,101012,101036,101152,101238,101349,101358,101379,101399,101448,101457,101482,101594,101601,101633,101724,101829,101879,101937,101943,102013,102060,102096,102161,102250,102281,102335,102386,102443,102545,102593,102610,102728,102838,102841,102866,103000,103037,103062,103422,103435,103572,103603,103819,103929,104040,104044,104191,104212,104275,104349,104397,104439,104539,104773,104867,104889,105308,105396,105406,105422,105452,105505,105572,105643,105647,105650,105689,105733,105973,106039,106084,106146,106398,106472,106502,106663,106677,106695,106727,106744,106831,107045,107179,107200,107260,107331,107455,107607,107627,107658,107690,107910,107924,108032,108066,108184,108312,108500,108617,108908,108988,109096,109128,109153,109188,109475,109627,109745,109825,109870,109877,109992,109994,110364,110381,110560,110599,110633,110771,110911,110977,111026,111063,111081,111239,111259,111572,111843,111910,112059,112069,112081,112093,112155,112240,112354,112791,112941,113059,113170,113238,113339,113343,113403,113945,113979,113987,114431,114461,114619,114673,114677,114746,114765,114803,114884,114919,115002,115012,115023,115138,115227,115895,116111,116125,116151,116273,116429,116445,116587,116696,116735,116810,117304,117340,117343,117555,117754,117838,117910,118073,118470,118481,118604,118730,118967,119197,119227,119344,119680,119748,119845,119888,119890,119894,119921,119943,120007,120014,120118,120184,120309,120373,120426,120446,120701,120952,121226,121445,121536,121775,121845,122390,122450,122837,123347,123365,123715,123921,124275,124357,124885,124904,125140,125447,125511,125722,125822,125874,126039,126205,126264,126308,126445,126555,126643,126704,126730,126904,126998,127158,127262,127313,127456,127486,127582,127627,127832,127880,128012,128028,128298,128476,128479,128485,128708,128739,128792,128850,128868,128972,128981,129033,129071,129317,129327,129596,129636,129713,129749,129814,129863,130039,130111,130221,130363,130449,130496,130557,130599,130610,130618,130745,130855,130895,131013,131177,131281,131324,131346,131363,131492,131561,131673,131714,131808,132061,132088,132121,132131,132172,132289,132379,132394,132515,132546,132699,132704,132763,132795,132804,132831,132959,132988,133024,133181,133215,133232,133284,133567,133682,133788,133985,134033,134062,134148,134358,134393,134430,134445,134467,134475,134508,134522,134556,134609,134778,134804,134881,135034,135050,135057,135114,135130,135187,135294,135386,135387,135499,135546,135594,135595,135613,135614,135648,135650,135658,135710,135728,135765,135784,135821,135846,135850,135885,135976,136000,136001,136012,136147,136217,136302,136357,136404,136459,136520,136648,136680,136693,136725,136742,136748,136788,136800,136826,136843,136847,136892,136913,136925,136952,137024,100421,100500,103909,104289,107743,108190,108323,112653,123697,134493,134816,135446,136675,115453,101791,103245,115462,126217,131889,133104


rails runner lib/finance/importer.rb
总淘汰共453 一共7811


复赛
长时间不交易


淘汰
LK100769
LK106566
LK109764
LK110579
LK114098
LK121405
LK125584
LK130780
LK119141
LK135543



晋级
LK105888


总淘汰共10 一共170



少人

c = ContestRank.select("investor_id").where(:trading_day => "2013-08-07 00:00:00",:contest_id => 1)
investor_ids = c.collect{|x| x.investor_id.to_i}

aa = Investor.select('out_id').where("id in  (2674, 2844)")


outIds_ids = c.collect{|x| x.investor_id.to_i}

复赛  LK132146  500000  500000  517174.85 17174.85  0 0 91412.57  465457.36 1  id = 32697

update investors set contest_id = 1, 
contest_status = 1, 
launch_init_cap = 500000, 
next_launch_date = "2013-09-06 00:00:00" where id = 1212;

http://list.lktz.com:4567/contests/1/participators/import.json


初始化成绩
=ERROR REPORT==== 13-Aug-2013::01:28:00 ===
[contest_initor]: investor(12611) without phase(undefined).



[error] Can't handle info: {tcp_closed,#Port<0.6304>}

select * from daily_cumulative_values where investor_id = 7414 order by id desc limit 3\G;