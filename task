  {auth_server, {"115.239.230.68", 8880} }

  rocket_finance
  在 screen -x 11115.import 中开启或停止服务,和备份数据库
  比赛成绩处理流程
  god start thin-rocket_finance
  god stop thin-rocket_finance
  ----------------------------------------------------------------------------------------------------------------------------
  计算全部人成绩
  进入screen进行操作，有日志可以查看
  screen -x rocket_finance

  lkadmin@lknode92x:~/cheetah/rocket_finance$ ./ebin/start-dev.sh

  同步数据
  同步合约，用户，成交记录和登录日志 (缺用户操作日志)

  交易日使用: varieties, instruments, investors,

  	TradingDay = "2014-07-21".
    Reqs = [varieties, instruments,investors, settlements].
    rf_cheetah_sync:run(TradingDay, Reqs).
    q().退出  重启一下 服务

    同步实时行情, 分钟K线
    TradingDay = "2014-06-04".
    Reqs2 = [varieties, instruments, candlesticks].
    %Reqs2 = [varieties, instruments, rt_markets, candlesticks].
    rf_cheetah_sync:run(TradingDay, Reqs2).
    如果遇到timeout 要进入数据库 market 删除表candlesticks和表market_ticks 中 今天的数据

  非交易日使用:
    	TradingDay = "2014-07-20".
      rf_cheetah_sync:run(TradingDay, not_trading_day).

  审核晋级用户
  bundle exec thin start -p 4567 开启一个本地端口
  root登陆 密码:root@lktz

  导入新参赛选手名单 // 一个月一次 月初

  要先审核名单晋级才能初始化

  比赛成绩计算初始化 (缺用户操作日志)
    TradingDay = "2014-07-21".
    contest_initor:do_init(TradingDay).

  计算初赛，复赛成绩 (缺用户操作日志)
  rocket_finance_manager:calc_ranks(1, TradingDay).    % 计算模拟初赛成绩 > 7minutes
  rocket_finance_manager:calc_ranks(2, TradingDay).    % 计算模拟复赛成绩 < 1minutes

  统计初赛、复赛 比赛统计数据 (缺用户操作日志)
  rocket_finance_manager:stat_contest(1, TradingDay).
  rocket_finance_manager:stat_contest(1, TradingDay).   % 执行2次
  rocket_finance_manager:stat_contest(2, TradingDay).   % 执行1次`
  -------
  rocket_finance_manager:stat_contest(1,"2014-09-03",undefined)

  计算不活跃用户
  rocket_finance_manager:count_inactive_days().
  计算单笔   (缺用户操作日志)

  %TradingDay = "2014-00-00".

  %rocket_finance_manager:analyze_investments(TradingDay).

  搬行情

  计算权益日K线 (缺用户操作日志)*
    TradingDay = "2013-12-13".
    equity_candlestick_manager:calculate(TradingDay).

  导入实盘成绩
  bundle exec thin start -p 4567 开启一个本地端口

  iconv -f gbk -t utf8 real.csv > shipan_2014-08-29.utf8.csv
  iconv -f gbk -t utf8 2014-08-29.csv > 2014-08-29.utf8.csv


  淘汰长期不交易名单
  ~/rocket_finance/lib/finance$ vim importer.rb 最后一个方法out_ids = [] 放入长期不交易的名单
  rails runner lib/finance/importer.rb
  数据备份*
  god start thin-rocket_finance
  god stop thin-rocket_finance
  mysqldump -uroot rocket_finance --ignore-table=rocket_finance.equity_min_candlesticks  > ~/rf_data/rf.20111205_20140108_all.20140108_nokline.dump
  ----------------------------------------------------------------------------------------------------------------------------


  ------------------------------------------------------------------------------------
  计算单个用户的成绩
select * from contest_ranks where investor_id = 20275 and contest_id = 2 and phase_id = 64043 and init_capital = 500000 and max_init_capital = 500000 and started_at = "2013-02-07 00:00:00";
  insert into phases set investor_id = 908, contest_id = 2, started_at = "2014-08-07 00:00:00",result = 1, init_capital = 500000;

  insert into participations set investor_id = 908, contest_id = 2,phase_id = 145040;

  insert into contest_ranks set investor_id = 908, contest_id = 2, phase_id = 145040, init_capital = 500000, max_init_capital = 500000, started_at = "2014-08-07 00:00:00";

  update investors set phase_id = 120373, contest_status = 1, next_launch_date = "2014-08-07 00:00:00" where out_id = 100891;

  Investor = rocket_finance_database:find_investor(pool, [{out_id, 102193}]).
  rank_calculate_worker:async_calculate(Investor,"2014-08-01",undefined,undefined).
  ------------------------------------------------------------------------------------

  ./rebar generate skeleton=otp.start-dev to=./ebin/

  erl_cheetah_admin:login("ninja", "ninja@admin", [investors, varieties]).
  erl_cheetah_admin:login("rocketfinance", "rocketfinance@lk", [monitor_groups]).
  erl_cheetah_admin:login().

  find_pre_trades(ConnPool, InvestorId, InstrumentId, TradingDay) ->
      SQL = list_to_binary(["select * from trades where investor_id = ? and instrument_id = ? and trading_day < ? and investment_id is null and trading_day > ? order by trade_time_ts asc"]),
      Result = emysql:execute(ConnPool, SQL, [InvestorId, InstrumentId, TradingDay, "2012-11-22"]),
      emysql_util:as_record(Result, trade, record_info(fields, trade)).

  ------------------------------------------------------------------------------------------------------------
  配置测试行情
  restart 9275.vmarket 项目

  market_collector:clear_rt_market().

  market_collector:toggle_debug_rt_market().

  vmatch_signal_broadcaster ! {<<"if">>, trading}.


  ==================比赛审核======================
  update investors set contest_id = 2, contest_status = 2, comment = "于2014年05月06日参加复赛",next_launch_date = "2014-05-06 00:00:00", launch_init_cap = 500000 where out_id in(112802);

  select id from investors where out_id in(112802);
  注:LK118381 没有执行一下步骤,原因reviews中没有他的记录
  select id from reviews where investor_id = 12647;
  update reviews set next_launch_date = "2014-05-06 00:00:00",reviewed_at = now(),status=1,comment = "于2014年05月06日参加复赛" where id in(2488);

  ===============恢复数据=================
  pv ~/rf_data/rf.20131211_20140603_all.20130603_nokline.dump | mysql -u root rocket_finance

  ========================================
 insert into reviews(investor_id,phase_id,comment,reviewed_at,status,created_at,updated_at,next_launch_date) values(5003,)

  审核
LK100023通过审核，于2014-09-04参加复赛
LK100244通过审核，于2014-09-04参加复赛
LK100865通过审核，于2014-09-04参加复赛
LK102038通过审核，于2014-09-04参加复赛
LK109994通过审核，于2014-09-04参加复赛
LK121540通过审核，于2014-09-04参加复赛
LK132210通过审核，于2014-09-04参加复赛


  实盘

  初赛
长时间不交易

  晋级
LK120874
LK131770


  淘汰

  总淘汰共337 一共7067
  复赛
长时间不交易

  淘汰
LK102866
LK112093
LK126233


  晋级


  总淘汰 共 126
  select * from contest_ranks where  investor_id = 2674;

  少人

  c = ContestRank.select("investor_id").where(:trading_day => "2014-02-28 00:00:00",:contest_id => 1)
  investor_ids = c.collect{|x| x.investor_id.to_i}

  aa = Investor.select('out_id').where(:id => investor_ids)


  outIds_ids = aa.collect{|x| x.out_id.to_i}


  LK101853通过审核，于2013-12-23参加复赛 id = 11208

  update investors set contest_id = 2,
  contest_status = 1,
  launch_init_cap = 500000,
  next_launch_date = "2014-08-07 00:00:00" where out_id in (100891);

  select * from daily_cumulative_values where investor_id = 7414 order by id desc limit 3\G;
