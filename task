{auth_server, {"115.239.230.68", 8880} }

rocket_finance
在 screen -x 11115.import 中开启或停止服务,和备份数据库
比赛成绩处理流程

----------------------------------------------------------------------------------------------------------------------------
计算全部人成绩
进入screen进行操作，有日志可以查看
screen -x rocket_finance

lkadmin@lknode92x:~/cheetah/rocket_finance$ ./ebin/start-dev.sh

同步数据
同步合约，用户，成交记录和登录日志 (缺用户操作日志)

交易日使用: 

	TradingDay = "2013-10-18".
  Reqs = [varieties, instruments, investors, settlements]. 
  rf_cheetah_sync:run(TradingDay, Reqs).

  q().退出  重启一下 服务

  同步实时行情, 分钟K线
  TradingDay = "2013-10-18".
  Reqs2 = [varieties, instruments, candlesticks].
  %Reqs2 = [varieties, instruments, rt_markets, candlesticks].
  rf_cheetah_sync:run(TradingDay, Reqs2).
  如果遇到timeout 要进入数据库 market 删除表candlesticks和表market_ticks 中 今天的数据

非交易日使用: 
  	TradingDay = "2013-10-12". 
    rf_cheetah_sync:run(TradingDay, not_trading_day).  

审核晋级用户
bundle exec thin start -p 4567 开启一个本地端口
root登陆 密码:root@lktz
 
导入新参赛选手名单 // 一个月一次 月初

要先审核名单晋级才能初始化

比赛成绩计算初始化 (缺用户操作日志)
  TradingDay = "2013-10-18".
  contest_initor:do_init(TradingDay).

计算初赛，复赛成绩 (缺用户操作日志)
rocket_finance_manager:calc_ranks(1, TradingDay).    % 计算模拟初赛成绩 > 7minutes
rocket_finance_manager:calc_ranks(2, TradingDay).    % 计算模拟复赛成绩 < 1minutes

统计初赛、复赛 比赛统计数据 (缺用户操作日志)
rocket_finance_manager:stat_contest(1, TradingDay).   % 执行2次
rocket_finance_manager:stat_contest(2, TradingDay).   % 执行1次

计算不活跃用户
rocket_finance_manager:count_inactive_days().

计算单笔 (缺用户操作日志)

TradingDay = "2013-10-13".

rocket_finance_manager:analyze_investments(TradingDay).

搬行情

计算权益日K线 (缺用户操作日志)*

  TradingDay = "2013-10-18".
  equity_candlestick_manager:calculate(TradingDay).

导入实盘成绩
bundle exec thin start -p 4567 开启一个本地端口

iconv -f gbk -t utf8 real.csv > shipan_2013-10-18.utf8.csv
iconv -f gbk -t utf8 2013-10-18.csv > 2013-10-18.utf8.csv


淘汰长期不交易名单
~/rocket_finance/lib/finance$ vim importer.rb 最后一个方法out_ids = [] 放入长期不交易的名单
rails runner lib/finance/importer.rb
数据备份*
mysqldump -uroot rocket_finance --ignore-table=rocket_finance.equity_min_candlesticks  > ~/rf_data/rf.20111205_20130822_all.20130822_nokline.dump
----------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------
LK116870 8月21号开始复赛。 id = 16648
计算单个用户的成绩 
insert into phases set investor_id = 16648, contest_id = 2, started_at = "2013-08-21 00:00:00",result = 1, init_capital = 500000;
insert into participations set investor_id = 16648, contest_id = 2,phase_id = 95282;
insert into contest_ranks set investor_id = 16648, contest_id = 2, phase_id = 95282, init_capital = 500000, max_init_capital = 500000, started_at = "2013-08-21 00:00:00";
update investors set phase_id = 95282, contest_status = 1, next_launch_date = "2013-08-21 00:00:00" where id = 16648;

TradingDay = "2013-08-21".
OutId = 116870.
rocket_finance_manager:calc_investor_rank({out_id, OutId}, TradingDay).
------------------------------------------------------------------------------------

./rebar generate skeleton=otp.start-dev to=./ebin/  

erl_cheetah_admin:login("ninja", "ninja@admin", [investors, varieties]).
erl_cheetah_admin:login("rocketfinance", "rocketfinance@lk", [monitor_groups]).
erl_cheetah_admin:login().

find_pre_trades(ConnPool, InvestorId, InstrumentId, TradingDay) ->
    SQL = list_to_binary(["select * from trades where investor_id = ? and instrument_id = ? and trading_day < ? and investment_id is null and trading_day > ? order by trade_time_ts asc"]),
    Result = emysql:execute(ConnPool, SQL, [InvestorId, InstrumentId, TradingDay, "2012-11-22"]),
    emysql_util:as_record(Result, trade, record_info(fields, trade)).

------------------------------------------------------------------------------------------------------------
配置测试行情
restart 9275.vmarket 项目

market_collector:clear_rt_market().

market_collector:toggle_debug_rt_market().

vmatch_signal_broadcaster ! {<<"if">>, trading}.


==================比赛审核======================
update investors set contest_id = 2, contest_status = 2, comment = "于2013-08-15参加复赛",next_launch_date = "2013-08-15 00:00:00", launch_init_cap = 500000 where out_id in(103382,103738,108992,118381,121656);

select id from investors where out_id in(103382,103738,108992,118381,121656);
注:LK118381 没有执行一下步骤,原因reviews中没有他的记录
select id from reviews where investor_id = 3377;
update reviews set next_launch_date = "2013-08-15 00:00:00",reviewed_at = now(),status=1,comment = "于2013-08-15参加复赛" where id in(1608, 1609,1610,1611,1612);

===============恢复数据=================
pv ~/rf_data/rf.20111205_20130603_all.20130603_nokline.dump | mysql -u root rocket_finance

========================================


审核

LK107822通过审核，于2013-10-21参加复赛
LK120264通过审核，于2013-10-21参加复赛
LK129329通过审核，于2013-10-21参加复赛

实盘
LK100891,殷先生,湖南,576265.42,5262.09,0.1525308
LK119226,苏女士,上海,547650.06,-2790.00,0.0953001
LK106870,宗先生,北京,535933.80,3987.11,0.0718676
LK100068,姜先生,北京,529374.81,8436.62,0.0587496
LK113354,丰先生,辽宁,526176.78,0.00,0.0523536
LK106115,林先生,福建,521008.72,-95.84,0.0420174
LK101186,于先生,山东,520440.41,0.00,0.0408808
LK111340,夏先生,江西,498786.43,-4835.83,-0.0024271
LK105888,薛先生,上海,490636.71,-2027.88,-0.0187266
LK102120,陈先生,浙江,490503.89,0.00,-0.0189922
LK101378,李先生,天津,489559.94,0.00,-0.0208801
LK101000,王先生,河南,486981.00,-657.75,-0.0260380
LK104021,李先生,河南,482607.35,0.00,-0.0347853
LK127796,黄先生,广东,482479.37,-3467.77,-0.0350413
LK101246,赖先生,福建,478921.27,-21078.73,-0.0421575
LK120649,颜先生,重庆,476946.49,-1787.62,-0.0461070
LK111230,冯先生,辽宁,471725.52,0.00,-0.0565490
LK100566,李先生,广东,471657.76,0.00,-0.0566845
LK123464,朱先生,甘肃,470017.34,0.00,-0.0599653
LK119240,谢先生,天津,464756.60,0.00,-0.0704868
LK106825,徐先生,山东,451353.71,-469.11,-0.0972926
LK100031,谢先生,上海,450049.13,-26.50,-0.0999017

初赛
长时间不交易
LK104364
LK119940
LK128716
LK129452
LK130812
LK131031
LK131223
LK131928
LK132655
LK134908
LK134972



晋级
LK101540
LK103310
LK104331
LK105351
LK107463
LK108001
LK111362
LK115030
LK119822
LK126246
LK128476
LK132093
LK132416
LK137612
14




淘汰


rails runner lib/finance/importer.rb
总淘汰共219 一共6912


复赛
长时间不交易



淘汰
LK100625
LK103248
LK107561
LK129377


晋级


总淘汰共4 一共136

select * from contest_ranks where  investor_id = 2674;

少人

c = ContestRank.select("investor_id").where(:trading_day => "2013-09-13 00:00:00",:contest_id => 2)
investor_ids = c.collect{|x| x.investor_id.to_i}

aa = Investor.select('out_id').where("id in  (2674, 2844)")


outIds_ids = c.collect{|x| x.investor_id.to_i}

复赛  LK132146  500000  500000  517174.85 17174.85  0 0 91412.57  465457.36 1  id = 32697

update investors set contest_id = 2, 
contest_status = 1, 
launch_init_cap = 500000, 
next_launch_date = "2013-09-06 00:00:00" where id = 1212;

http://list.lktz.com:4567/contests/1/participators/import.json

LK101499通过审核，于2013-09-19参加复赛 1515
LK102077通过审核，于2013-09-19参加复赛 2093
LK105607通过审核，于2013-09-19参加复赛 5557
LK105764通过审核，于2013-09-19参加复赛 5714
LK110160通过审核，于2013-09-19参加复赛 10050
LK110192通过审核，于2013-09-19参加复赛 10080
LK113198通过审核，于2013-09-19参加复赛 13036

初始化成绩
=ERROR REPORT==== 13-Aug-2013::01:28:00 ===
[contest_initor]: investor(12611) without phase(undefined).



[error] Can't handle info: {tcp_closed,#Port<0.6304>}

select * from daily_cumulative_values where investor_id = 7414 order by id desc limit 3\G;