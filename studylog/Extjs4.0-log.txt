搭建环境
	html 中 
		-->../extjs4/resources/css/ext-all.css
		--> ../extjs4/bootstrap.js

//Ext中的alert
	(function(){
		Ext.onReady(function()){
			Ext.MessageBox.alert("text","title");
		}
	})
//遍历数组 当返回false停止
	Ext.Array.every(arry,function(item){
	


	},this);
//遍历数组 当返回的为true 就留下 组成新的数组
	var newArray = Ext.Array.filter(arry,function(item){
		
	})
//建立win对象
	var win = new Ext.window.Window({
		width:400,
		height:300,
		title:'mywin'
	});
	win.show();//显示窗体
//为函数建立别名
	var o ={
		//定义一个函数（方法）
		muber : function(){
			alert(123);
		}
	}
	var mub = Ext.Funcction.alias(o,'say');
	mub();
//类的管理器，创建类的对象 Ext.crete(类名,{参数});
	var win = Ext.create('Ext.window.Window',{ 
		width:400,
		height:300,
		title:'mywin'
	})
	win.show();
//创建类 Ext.define("类名",{参数})  注:可用于制作自己的组件,一般放在单独的js中
	Ext.define("myWin",{
		width:400,
		height:300,
		title:'mywin',
		//初始化方法
		initComponent:function(){
			this.callParent(arguments);
		}
	})
//requires 异步加载js ，需要的时候才调用js，节省带宽，页面加载更快，
	//添加命名空间
	(function(){
		Ext.Loader.setConfig({
			enabled:true, //启用
			paths:{
				myApp:'code/ux' //空间路径包含mywin.js
			}
		});
		Ext.onReady(function()){
			Ext.create("ux.myWin",{
				requires:['ux.myWin']
			}).show();
		}
	})
//config 自动封装 get 和 set 属性

//mixins 混合 让一个类获得另一个类的方法、属性，类似多继承
	mixins:{
	
	}